(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{340:function(e,t,a){e.exports=a.p+"assets/img/dac-demo.4bc63a17.gif"},341:function(e,t,a){e.exports=a.p+"assets/img/byob-demo.ac920772.gif"},353:function(e,t,a){"use strict";a.r(t);var n=a(33),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v('This is the architecture documentation for the "'),n("strong",[e._v("Delegated Admin Console")]),e._v('" aka '),n("a",{attrs:{href:"https://github.com/udplabs/okta-dac",target:"_blank",rel:"noopener noreferrer"}},[e._v("okta-dac"),n("OutboundLink")],1),e._v(" open source project "),n("em",[e._v('and its companion project, "'),n("strong",[e._v("End-user Dashboard")]),e._v('" aka '),n("a",{attrs:{href:"https://github.com/oktadeveloper/byob-dashboard",target:"_blank",rel:"noopener noreferrer"}},[e._v("byob-dashboard"),n("OutboundLink")],1)]),e._v(".")]),e._v(" "),n("p",[e._v("The Okta Identity Cloud provides a rich set of APIs and services that can be used to develop custom solutions for SaaS use-cases. We demonstrate these capabilities with "),n("em",[n("strong",[e._v("okta-dac")])]),e._v(', a project that implements the common use-case(s) of providing delegated administration (aka "self service") capabilities to SaaS tenants.')]),e._v(" "),n("p",[e._v("Using native Okta capabilities, we:")]),e._v(" "),n("ol",[n("li",[n("strong",[e._v('Add a "tenant" layer to an Okta Org')]),e._v(" using custom setup of Groups and "),n("a",{attrs:{href:"https://help.okta.com/en/prod/Content/Topics/Security/Administrators.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("Roles"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("strong",[e._v("Provide tenant self-service administration")]),e._v(" by leveraging "),n("a",{attrs:{href:"https://developer.okta.com/docs/guides/implement-oauth-for-okta/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OAuth for Okta"),n("OutboundLink")],1),e._v(".\n"),n("ul",[n("li",[e._v("Users in any particular tenant can have 1 of 2 roles: "),n("em",[e._v("User")]),e._v(" and "),n("em",[e._v("Tenant Admin")]),e._v(". Tenant Admins can access the "),n("strong",[e._v("Delegated Admin Console")]),e._v(" app. And all users can access the "),n("strong",[e._v("End-user Dashboard")]),e._v(" app.")])])]),e._v(" "),n("li",[n("strong",[e._v('Support "bring your own IdP"')]),e._v(" using Okta's "),n("a",{attrs:{href:"https://developer.okta.com/docs/concepts/identity-providers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Inbound Federation"),n("OutboundLink")],1),e._v(" functionality")]),e._v(" "),n("li",[n("strong",[e._v("Protect API resources")]),e._v(" with Okta's "),n("a",{attrs:{href:"https://developer.okta.com/docs/concepts/api-access-management/",target:"_blank",rel:"noopener noreferrer"}},[e._v("API Access Management"),n("OutboundLink")],1),e._v(" "),n("ul",[n("li",[e._v("We configure Okta to generate JWTs embedding tenant info; We design our API endpoints to implement tenant-namepsace in the request url; And we implement a custom authorizer to restrict access to the tenant-namepsaced route based on tenant info embedded in the JWT (the Bearer token of the API request).")])])])]),e._v(" "),n("h2",{attrs:{id:"delegated-admin-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#delegated-admin-console"}},[e._v("#")]),e._v(" Delegated Admin Console")]),e._v(" "),n("p",[e._v("This section discusses the Admin App")]),e._v(" "),n("p",[n("img",{attrs:{src:a(340),alt:"alt text"}})]),e._v(" "),n("h3",{attrs:{id:"the-superuser-role"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-superuser-role"}},[e._v("#")]),e._v(" The Superuser Role")]),e._v(" "),n("p",[e._v("About the Superuser role")]),e._v(" "),n("h3",{attrs:{id:"the-tenant-admin-role"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-tenant-admin-role"}},[e._v("#")]),e._v(" The Tenant Admin Role")]),e._v(" "),n("p",[e._v("About the Tenant Admin role")]),e._v(" "),n("h2",{attrs:{id:"end-user-dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#end-user-dashboard"}},[e._v("#")]),e._v(" End-user Dashboard")]),e._v(" "),n("p",[e._v("This section discusses the End-User Dashboard")]),e._v(" "),n("p",[n("img",{attrs:{src:a(341),alt:"alt text"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);